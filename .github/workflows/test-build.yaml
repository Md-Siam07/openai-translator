name: Test Build
on:
  push:
    branches:
      - main

jobs:
  build-browser-extension:
    runs-on: ubuntu-22.04
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.0
      - uses: actions/setup-node@v3
        with:
          cache: pnpm
          node-version: 18
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - id: measurement-5
        name: Record Measurement After Install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install dependencies
          task: get-measurement
      - name: Build
        run: make build-browser-extension
      - id: measurement-7
        name: Record Measurement After Build
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Build
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
  build-tauri:
    permissions:
      contents: write
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.0
      - uses: actions/setup-node@v3
        with:
          cache: pnpm
          node-version: 18
      - name: install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
      - if: matrix.platform == 'ubuntu-20.04'
        name: install dependencies (ubuntu only)
        run: 'sudo apt-get update

          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev
          librsvg2-dev patchelf libx11-dev libxdo-dev libxcb-shape0-dev libxcb-xfixes0-dev

          '
      - id: measurement-6
        name: Record Measurement After install dependencies (ubuntu only)
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: install dependencies (ubuntu only)
          task: get-measurement
      - if: matrix.platform == 'macos-latest'
        name: install dependencies (mac only)
        run: 'rustup target add aarch64-apple-darwin

          '
      - id: measurement-8
        name: Record Measurement After install dependencies (mac only)
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: install dependencies (mac only)
          task: get-measurement
      - name: install frontend dependencies
        run: pnpm install --no-frozen-lockfile
      - id: measurement-10
        name: Record Measurement After install frontend dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: install frontend dependencies
          task: get-measurement
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: tauri-action-mac
        if: matrix.platform == 'macos-latest'
        name: Build Tauri App (MacOS Universal)
        uses: tauri-apps/tauri-action@dev
        with:
          args: --target universal-apple-darwin
          releaseId: test-release
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: tauri-action
        if: matrix.platform != 'macos-latest'
        name: Build Tauri App
        uses: tauri-apps/tauri-action@dev
        with:
          releaseId: test-release
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: tauri-client-app-artifact
          path: '${{ fromJSON(steps.tauri-action-mac.outputs.artifactPaths)[0] }}

            ${{ fromJSON(steps.tauri-action.outputs.artifactPaths)[0] }}

            '
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos-latest
          - ubuntu-20.04
          - windows-latest
